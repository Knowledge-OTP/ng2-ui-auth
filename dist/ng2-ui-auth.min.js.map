{"version":3,"file":null,"sources":["../node_modules/rollup-plugin-typescript/src/typescript-helpers.js","../src/utils.ts","../src/local.ts","../src/auth.ts","../src/config.ts","../src/storage.ts","../src/shared.ts","../src/popup.ts","../src/oauth1.ts","../src/oauth2.ts","../src/oauth.ts","../src/jwtHttp.ts"],"sourcesContent":["export function __extends(d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\n\nexport function __decorate(decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n}\n\nexport function __metadata(k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n}\n\nexport function __param(paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n}\n\nexport function __awaiter(thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator.throw(value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments)).next());\n    });\n}\n","/**\n * Created by Ron on 17/12/2015.\n */\n\nexport function assign(target: any, ...src: any[]): any {\n    if (target == null) {\n        throw new TypeError('Cannot convert undefined or null to object');\n    }\n\n    target = Object(target);\n    for (var index = 1; index < arguments.length; index++) {\n        var source = arguments[index];\n        if (source != null) {\n            for (var key in source) {\n                if (Object.prototype.hasOwnProperty.call(source, key)) {\n                    target[key] = source[key];\n                }\n            }\n        }\n    }\n    return target;\n}\n\nexport function joinUrl(baseUrl: string, url: string) {\n    if (/^(?:[a-z]+:)?\\/\\//i.test(url)) {\n        return url;\n    }\n\n    let joined = [baseUrl, url].join('/');\n\n    let normalize = function(str) {\n        return str\n            .replace(/[\\/]+/g, '/')\n            .replace(/\\/\\?/g, '?')\n            .replace(/\\/\\#/g, '#')\n            .replace(/\\:\\//g, '://');\n    };\n\n    return normalize(joined);\n}\n\nexport function merge(obj1, obj2) {\n    let result = {};\n    for (var i in obj1) {\n        if (obj1.hasOwnProperty(i)) {\n            if ((i in obj2) && (typeof obj1[i] === 'object') && (i !== null)) {\n                result[i] = merge(obj1[i], obj2[i]);\n            } else {\n                result[i] = obj1[i];\n            }\n        }\n    }\n    for (i in obj2) {\n        if (obj2.hasOwnProperty(i)) {\n            if (i in result) {\n                continue;\n            }\n            result[i] = obj2[i];\n        }\n\n    }\n    return result;\n}\n\nexport function camelCase(name) {\n    return name.replace(/([\\:\\-\\_]+(.))/g, function(_, separator, letter, offset) {\n        return offset ? letter.toUpperCase() : letter;\n    });\n}","import {Injectable} from '@angular/core';\r\nimport {Shared} from './shared';\r\nimport {Config} from './config';\r\nimport {Http, RequestOptionsArgs, Response} from '@angular/http';\r\nimport {joinUrl} from './utils';\r\nimport {Observable} from 'rxjs/Observable';\r\nimport 'rxjs/add/operator/do';\r\n\r\n/**\r\n * Created by Ron on 17/12/2015.\r\n */\r\n\r\nfunction getFullOpts(user: string | Object, userOpts?: RequestOptionsArgs) {\r\n    const opts = userOpts || {};\r\n    if (user) {\r\n        opts.body = typeof user === 'string' ? user : JSON.stringify(user);\r\n    }\r\n    opts.method = opts.method || 'POST';\r\n    return opts;\r\n}\r\n\r\n@Injectable()\r\nexport class Local {\r\n    constructor(private http: Http,\r\n                private shared: Shared,\r\n                private config: Config) {}\r\n\r\n    login(user: string | Object, opts?: RequestOptionsArgs): Observable<Response> {\r\n        const fullOpts = getFullOpts(user, opts);\r\n        const url = fullOpts.url ? fullOpts.url : joinUrl(this.config.baseUrl, this.config.loginUrl);\r\n\r\n        return this.http.request(url, fullOpts)\r\n            .do((response: Response) => this.shared.setToken(response));\r\n    }\r\n\r\n    signup(user: string | Object, opts?: RequestOptionsArgs): Observable<Response> {\r\n        const fullOpts = getFullOpts(user, opts);\r\n        const url = fullOpts.url ? fullOpts.url : joinUrl(this.config.baseUrl, this.config.signupUrl);\r\n\r\n        return this.http.request(url, getFullOpts(user, fullOpts));\r\n    }\r\n}","import {Injectable, Injector} from '@angular/core';\r\nimport {Response, RequestOptionsArgs, XHRBackend, RequestOptions} from '@angular/http';\r\nimport {Shared} from './shared';\r\nimport {Local} from './local';\r\nimport {Oauth} from './oauth';\r\nimport {Popup} from './popup';\r\nimport {Oauth2} from './oauth2';\r\nimport {Oauth1} from './oauth1';\r\nimport {Storage} from './storage';\r\nimport {ICustomConfig, Config} from './config';\r\nimport {Observable} from 'rxjs/Observable';\r\nimport {JwtHttp} from './jwtHttp';\r\n\r\n/**\r\n * Created by Ron on 17/12/2015.\r\n */\r\n\r\nexport function NG2_UI_AUTH_PROVIDERS(config: ICustomConfig): Array<any> {\r\n    return [{provide: Config, useFactory: () => { return new Config(config);}},\r\n            {provide: Storage, useFactory: (providedConfig) => { return new Storage(providedConfig);}, deps: [Config]},\r\n            {provide: Shared,  useFactory: (storage, providedConfig) => { return new Shared(storage, providedConfig);}, deps: [Storage, Config]},\r\n            {provide: JwtHttp, useFactory: (xhrBackend, requestOptions, shared, config, router) => new JwtHttp(xhrBackend, requestOptions, shared, config), deps: [XHRBackend, RequestOptions, Shared, Config]},\r\n            {provide: Oauth,  useFactory: (http, injector, shared, providedConfig) => { return new Oauth(http, injector, shared, providedConfig);}, deps: [JwtHttp, Injector, Shared, Config]} ,\r\n            {provide: Popup,  useFactory: (providedConfig) => { return new Popup(providedConfig);}, deps: [Config]},\r\n            {provide: Oauth1,  useFactory: (http, popup, providedConfig) => { return new Oauth1(http, popup, providedConfig);}, deps: [JwtHttp, Popup, Config]} ,\r\n            {provide: Oauth2,  useFactory: (http, popup, storage, providedConfig) => { return new Oauth2(http, popup, storage, providedConfig);}, deps: [JwtHttp, Popup, Storage, Config]} ,\r\n            {provide: Local,  useFactory: (http, shared, providedConfig) => { return new Local(http, shared, providedConfig);}, deps: [JwtHttp, Shared, Config]} ,\r\n            {provide: Auth,  useFactory: (shared, local, oauth) => { return new Auth(shared, local, oauth);}, deps: [Shared, Local, Oauth]} ,\r\n        ];\r\n}\r\n\r\n@Injectable()\r\nexport class Auth {\r\n    constructor(private shared: Shared,\r\n                private local: Local,\r\n                private oauth: Oauth) {}\r\n    login(user, opts?: RequestOptionsArgs): Observable<Response> {\r\n        return this.local.login(user, opts);\r\n    }\r\n    signup(user, opts?: RequestOptionsArgs): Observable<Response>  {\r\n        return this.local.signup(user, opts);\r\n    }\r\n    logout(): Observable<void> {\r\n        return this.shared.logout();\r\n    }\r\n    authenticate(name: string, userData?: any): Observable<Response> {\r\n        return this.oauth.authenticate(name, userData);\r\n    }\r\n    link(name: string, userData?: any): Observable<Response> {\r\n        return this.oauth.authenticate(name, userData);\r\n    }\r\n    unlink(provider: string, opts: RequestOptionsArgs): Observable<Response> {\r\n        return this.oauth.unlink(provider, opts);\r\n    }\r\n    isAuthenticated(): boolean {\r\n        return this.shared.isAuthenticated();\r\n    }\r\n    getToken(): string {\r\n        return this.shared.getToken();\r\n    }\r\n    setToken(token: string): void {\r\n        this.shared.setToken(token);\r\n    }\r\n    removeToken(): void {\r\n        this.shared.removeToken();\r\n    }\r\n    getPayload(): any {\r\n        return this.shared.getPayload();\r\n    }\r\n    setStorageType(type: string): void {\r\n        this.shared.setStorageType(type);\r\n    }\r\n    getExpirationDate(): Date {\r\n        return this.shared.getExpirationDate();\r\n    }\r\n}\r\n","import {Injectable} from '@angular/core';\r\n\r\n/**\r\n * Created by Ron on 17/12/2015.\r\n */\r\n\r\nexport interface IPopupOptions {\r\n    width?: number;\r\n    height?: number;\r\n    left?: number;\r\n    top?: number;\r\n}\r\n\r\nexport interface IOauth1Options {\r\n    url?: string;\r\n    name?: string;\r\n    popupOptions?: IPopupOptions;\r\n    redirectUri?: string;\r\n    authorizationEndpoint?: string;\r\n    type?: string;\r\n}\r\n\r\nexport interface IOauth2Options extends IOauth1Options {\r\n    state?: string| (() => string);\r\n    defaultUrlParams?: string[];\r\n    responseType?: string;\r\n    responseParams?: {\r\n        code?: string;\r\n        clientId?: string;\r\n        redirectUri?: string;\r\n    };\r\n    clientId?: string;\r\n    scopeDelimiter?: string;\r\n    scopePrefix?: string;\r\n\r\n    requiredUrlParams?: string[];\r\n    optionalUrlParams?: string[];\r\n    scope?: string[];\r\n    display?: string;\r\n}\r\nexport interface IProviders {\r\n    [provider: string]: IOauth2Options;\r\n}\r\nexport interface ICustomConfig {\r\n    tokenRoot?: string;\r\n    cordova?: boolean;\r\n    baseUrl?: string;\r\n    loginUrl?: string;\r\n    signupUrl?: string;\r\n    unlinkUrl?: string;\r\n    tokenName?: string;\r\n    tokenSeparator?: string;\r\n    tokenPrefix?: string;\r\n    authToken?: string;\r\n    authHeader?: string;\r\n    storageType?: string;\r\n    providers?: IProviders;\r\n    defaultHeaders?: { [name: string]: string };\r\n    withCredentials?: boolean\r\n}\r\n@Injectable()\r\nexport class Config implements ICustomConfig {\r\n    constructor(config?: ICustomConfig) {\r\n        Object.keys(config).forEach((key) => {\r\n            if (key !== 'providers') {\r\n                this[key] = config[key];\r\n            } else {\r\n                Object.keys(config[key]).forEach((provider) => {\r\n                    if (typeof this.providers[provider] === 'undefined') {\r\n                        this.providers[provider] = config.providers[provider];\r\n                    } else {\r\n                        Object.keys(config.providers[provider]).forEach((prop) => {\r\n                            this.providers[provider][prop] = config.providers[provider][prop];\r\n                        });\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    }\r\n    withCredentials = false;\r\n    tokenRoot = null;\r\n    cordova = false;\r\n    baseUrl = '/';\r\n    loginUrl = '/auth/login';\r\n    signupUrl = '/auth/signup';\r\n    unlinkUrl = '/auth/unlink/';\r\n    tokenName = 'token';\r\n    tokenSeparator = '_';\r\n    tokenPrefix = 'ng2-ui-auth';\r\n    authHeader = 'Authorization';\r\n    authToken = 'Bearer';\r\n    storageType = 'localStorage';\r\n    defaultHeaders = null;\r\n    providers: IProviders = {\r\n        facebook: {\r\n            name: 'facebook',\r\n            url: '/auth/facebook',\r\n            authorizationEndpoint: 'https://www.facebook.com/v2.5/dialog/oauth',\r\n            redirectUri: window.location.origin + '/',\r\n            requiredUrlParams: ['display', 'scope'],\r\n            scope: ['email'],\r\n            scopeDelimiter: ',',\r\n            display: 'popup',\r\n            type: '2.0',\r\n            popupOptions: {width: 580, height: 400}\r\n        },\r\n        google: {\r\n            name: 'google',\r\n            url: '/auth/google',\r\n            authorizationEndpoint: 'https://accounts.google.com/o/oauth2/auth',\r\n            redirectUri: window.location.origin,\r\n            requiredUrlParams: ['scope'],\r\n            optionalUrlParams: ['display'],\r\n            scope: ['profile', 'email'],\r\n            scopePrefix: 'openid',\r\n            scopeDelimiter: ' ',\r\n            display: 'popup',\r\n            type: '2.0',\r\n            popupOptions: {width: 452, height: 633}\r\n        },\r\n        github: {\r\n            name: 'github',\r\n            url: '/auth/github',\r\n            authorizationEndpoint: 'https://github.com/login/oauth/authorize',\r\n            redirectUri: window.location.origin,\r\n            optionalUrlParams: ['scope'],\r\n            scope: ['user:email'],\r\n            scopeDelimiter: ' ',\r\n            type: '2.0',\r\n            popupOptions: {width: 1020, height: 618}\r\n        },\r\n        instagram: {\r\n            name: 'instagram',\r\n            url: '/auth/instagram',\r\n            authorizationEndpoint: 'https://api.instagram.com/oauth/authorize',\r\n            redirectUri: window.location.origin,\r\n            requiredUrlParams: ['scope'],\r\n            scope: ['basic'],\r\n            scopeDelimiter: '+',\r\n            type: '2.0'\r\n        },\r\n        linkedin: {\r\n            name: 'linkedin',\r\n            url: '/auth/linkedin',\r\n            authorizationEndpoint: 'https://www.linkedin.com/uas/oauth2/authorization',\r\n            redirectUri: window.location.origin,\r\n            requiredUrlParams: ['state'],\r\n            scope: ['r_emailaddress'],\r\n            scopeDelimiter: ' ',\r\n            state: 'STATE',\r\n            type: '2.0',\r\n            popupOptions: {width: 527, height: 582}\r\n        },\r\n        twitter: {\r\n            name: 'twitter',\r\n            url: '/auth/twitter',\r\n            authorizationEndpoint: 'https://api.twitter.com/oauth/authenticate',\r\n            redirectUri: window.location.origin,\r\n            type: '1.0',\r\n            popupOptions: {width: 495, height: 645}\r\n        },\r\n        twitch: {\r\n            name: 'twitch',\r\n            url: '/auth/twitch',\r\n            authorizationEndpoint: 'https://api.twitch.tv/kraken/oauth2/authorize',\r\n            redirectUri: window.location.origin,\r\n            requiredUrlParams: ['scope'],\r\n            scope: ['user_read'],\r\n            scopeDelimiter: ' ',\r\n            display: 'popup',\r\n            type: '2.0',\r\n            popupOptions: {width: 500, height: 560}\r\n        },\r\n        live: {\r\n            name: 'live',\r\n            url: '/auth/live',\r\n            authorizationEndpoint: 'https://login.live.com/oauth20_authorize.srf',\r\n            redirectUri: window.location.origin,\r\n            requiredUrlParams: ['display', 'scope'],\r\n            scope: ['wl.emails'],\r\n            scopeDelimiter: ' ',\r\n            display: 'popup',\r\n            type: '2.0',\r\n            popupOptions: {width: 500, height: 560}\r\n        },\r\n        yahoo: {\r\n            name: 'yahoo',\r\n            url: '/auth/yahoo',\r\n            authorizationEndpoint: 'https://api.login.yahoo.com/oauth2/request_auth',\r\n            redirectUri: window.location.origin,\r\n            scope: [],\r\n            scopeDelimiter: ',',\r\n            type: '2.0',\r\n            popupOptions: {width: 559, height: 519}\r\n        },\r\n        bitbucket: {\r\n            name: 'bitbucket',\r\n            url: '/auth/bitbucket',\r\n            authorizationEndpoint: 'https://bitbucket.org/site/oauth2/authorize',\r\n            redirectUri: window.location.origin + '/',\r\n            requiredUrlParams: ['scope'],\r\n            scope: ['email'],\r\n            scopeDelimiter: ',',\r\n            type: '2.0',\r\n            popupOptions: {width: 1028, height: 529}\r\n        }\r\n    };\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {Config} from './config';\r\n\r\n/**\r\n * Created by Ron on 17/12/2015.\r\n */\r\n@Injectable()\r\nexport class Storage {\r\n    private store = {};\r\n    private isStorageAvailable: boolean;\r\n    constructor(private config: Config) {\r\n        this.isStorageAvailable = (() => {\r\n            try {\r\n                let supported = config.storageType in window && window[config.storageType] !== null;\r\n\r\n                if (supported) {\r\n                    let key = Math.random().toString(36).substring(7);\r\n                    (<any>window[this.config.storageType]).setItem(key, '');\r\n                    (<any>window[this.config.storageType]).removeItem(key);\r\n                }\r\n\r\n                return supported;\r\n            } catch (e) {\r\n                return false;\r\n            }\r\n        })();\r\n        if (!this.isStorageAvailable) {\r\n            console.warn(config.storageType + ' is not available.');\r\n        }\r\n    }\r\n    get(key: string) {\r\n        return this.isStorageAvailable ? window[this.config.storageType].getItem(key) : this.store[key];\r\n    }\r\n    set(key: string, value: string) {\r\n        return this.isStorageAvailable ? window[this.config.storageType].setItem(key, value) : this.store[key] = value;\r\n    }\r\n    remove(key: string) {\r\n        return this.isStorageAvailable ? window[this.config.storageType].removeItem(key) : delete this.store[key];\r\n    }\r\n}\r\n","/**\r\n * Created by Ron on 17/12/2015.\r\n */\r\nimport {Observable} from 'rxjs/Observable';\r\nimport {Subscriber} from 'rxjs/Subscriber';\r\nimport {Injectable} from '@angular/core';\r\nimport {Response} from '@angular/http';\r\nimport {Config} from './config';\r\nimport {Storage} from './storage';\r\n/**\r\n * Created by Ron on 17/12/2015.\r\n */\r\n\r\n@Injectable()\r\nexport class Shared {\r\n    tokenName = this.config.tokenPrefix ? [this.config.tokenPrefix, this.config.tokenName].join(this.config.tokenSeparator) : this.config.tokenName;\r\n    constructor(private storage: Storage, private config: Config) {}\r\n    getToken() {\r\n        return this.storage.get(this.tokenName);\r\n    }\r\n    getPayload() {\r\n        let token = this.getToken();\r\n\r\n        if (token && token.split('.').length === 3) {\r\n            try {\r\n                let base64Url = token.split('.')[1];\r\n                let base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\r\n                return JSON.parse(decodeURIComponent(encodeURIComponent(window.atob(base64))));\r\n            } catch (e) {\r\n                return undefined;\r\n            }\r\n        }\r\n    }\r\n    setToken(response: string | Response) {\r\n        if (!response) {\r\n            console.warn('Can\\'t set token without passing a value');\r\n            return;\r\n        }\r\n\r\n        let token: string;\r\n        if (typeof response === 'string') {\r\n            token = response;\r\n        } else {\r\n            let accessToken = response && response.json() && (response.json().access_token || response.json().token);\r\n            let tokenObject: { data: any };\r\n\r\n            if (accessToken) {\r\n                if (typeof accessToken === 'object' && typeof accessToken.data === 'object') {\r\n                    tokenObject = accessToken;\r\n                } else if (typeof accessToken === 'string') {\r\n                    token = accessToken;\r\n                }\r\n            }\r\n\r\n            if (!token && tokenObject) {\r\n                let tokenRootData = this.config.tokenRoot &&\r\n                    this.config.tokenRoot.split('.').reduce(\r\n                        (o, x) => {\r\n                            return o[x];\r\n                        },\r\n                        tokenObject.data);\r\n                token = tokenRootData ? tokenRootData[this.config.tokenName] : tokenObject.data[this.config.tokenName];\r\n            }\r\n\r\n            if (!token) {\r\n                let tokenPath = this.config.tokenRoot ? this.config.tokenRoot + '.' + this.config.tokenName : this.config.tokenName;\r\n                console.warn('Expecting a token named \"' + tokenPath);\r\n                return;\r\n            }\r\n        }\r\n\r\n        this.storage.set(this.tokenName, token);\r\n    }\r\n    removeToken() {\r\n        this.storage.remove(this.tokenName);\r\n    }\r\n    isAuthenticated() {\r\n        let token = this.getToken();\r\n\r\n        // a token is present\r\n        if (token) {\r\n            // token with a valid JWT format XXX.YYY.ZZZ\r\n            if (token.split('.').length === 3) {\r\n                // could be a valid JWT or an access token with the same format\r\n                try {\r\n                    let base64Url = token.split('.')[1];\r\n                    let base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\r\n                    let exp = JSON.parse(window.atob(base64)).exp;\r\n                    // jwt with an optional expiration claims\r\n                    if (exp) {\r\n                        let isExpired = Math.round(new Date().getTime() / 1000) >= exp;\r\n                        if (isExpired) {\r\n                            // fail: Expired token\r\n                            this.storage.remove(this.tokenName);\r\n                            return false;\r\n                        } else {\r\n                            // pass: Non-expired token\r\n                            return true;\r\n                        }\r\n                    }\r\n                } catch (e) {\r\n                    // pass: Non-JWT token that looks like JWT\r\n                    return true;\r\n                }\r\n            }\r\n            // pass: All other tokens\r\n            return true;\r\n        }\r\n        // lail: No token at all\r\n        return false;\r\n    }\r\n    getExpirationDate() {\r\n        let payload = this.getPayload();\r\n        if (payload.exp && Math.round(new Date().getTime() / 1000) < payload.exp) {\r\n            let date = new Date(0);\r\n            date.setUTCSeconds(payload.exp);\r\n            return date;\r\n        }\r\n        return null;\r\n    }\r\n    logout(): Observable<any> {\r\n        this.storage.remove(this.tokenName);\r\n        return Observable.create((observer: Subscriber<any>) => {\r\n            observer.next();\r\n            observer.complete();\r\n        });\r\n    }\r\n    setStorageType(type) {\r\n        this.config.storageType = type;\r\n    }\r\n}\r\n","import {Injectable} from '@angular/core';\nimport {Observable} from 'rxjs/Observable';\nimport {assign} from './utils';\nimport {Config, IPopupOptions} from './config';\nimport 'rxjs/add/observable/interval';\nimport 'rxjs/add/observable/fromEvent';\nimport 'rxjs/add/operator/concatMap';\nimport 'rxjs/add/operator/take';\nimport 'rxjs/add/operator/takeWhile';\n\n\n/**\n * Created by Ron on 17/12/2015.\n */\n\n@Injectable()\nexport class Popup {\n    url = '';\n    popupWindow: Window = null;\n\n    private static prepareOptions(options: IPopupOptions) {\n        options = options || {};\n        let width = options.width || 500;\n        let height = options.height || 500;\n        return assign(\n            {\n                width: width,\n                height: height,\n                left: window.screenX + ((window.outerWidth - width) / 2),\n                top: window.screenY + ((window.outerHeight - height) / 2.5)\n            },\n            options);\n    }\n\n    private static stringifyOptions(options: Object) {\n        return Object.keys(options).map((key) => {\n            return key + '=' + options[key];\n        }).join(',');\n    }\n\n    private static parseQueryString(joinedKeyValue: string): any {\n        let key, value;\n        return joinedKeyValue.split('&').reduce(\n            (obj, keyValue) => {\n                if (keyValue) {\n                    value = keyValue.split('=');\n                    key = decodeURIComponent(value[0]);\n                    obj[key] = typeof value[1] !== 'undefined' ? decodeURIComponent(value[1]) : true;\n                }\n                return obj;\n            },\n            {});\n    }\n\n\n    constructor(private config: Config) {}\n    open(url: string, name: string, options: IPopupOptions) {\n        this.url = url;\n\n        let stringifiedOptions = Popup.stringifyOptions(Popup.prepareOptions(options));\n        let UA = window.navigator.userAgent;\n        let windowName = (this.config.cordova || UA.indexOf('CriOS') > -1) ? '_blank' : name;\n\n        this.popupWindow = window.open(url, windowName, stringifiedOptions);\n\n        window['popup'] = this.popupWindow;\n\n        if (this.popupWindow && this.popupWindow.focus) {\n            this.popupWindow.focus();\n        }\n\n        return this;\n    }\n\n    eventListener(redirectUri: string) {\n        return Observable\n            .fromEvent(this.popupWindow, 'loadstart')\n            .concatMap((event: Event & { url: string }) => {\n                if (!this.popupWindow || this.popupWindow.closed) {\n                    return <any>['Popup Window Closed'];\n                }\n                if (event.url.indexOf(redirectUri) !== 0) {\n                    return <any>[];\n                }\n\n                let parser = document.createElement('a');\n                parser.href = event.url;\n\n                if (parser.search || parser.hash) {\n                    const queryParams = parser.search.substring(1).replace(/\\/$/, '');\n                    const hashParams = parser.hash.substring(1).replace(/\\/$/, '');\n                    const hash = Popup.parseQueryString(hashParams);\n                    const qs = Popup.parseQueryString(queryParams);\n                    const allParams = assign({}, qs, hash);\n\n                    this.popupWindow.close();\n\n                    if (allParams.error) {\n                        throw allParams.error;\n                    } else {\n                        return <any>[allParams];\n                    }\n                }\n                return <any>[];\n            })\n            .take(1)\n            .takeWhile((response) => response !== 'Popup Window Closed');\n    }\n\n    pollPopup() {\n        return Observable\n            .interval(50)\n            .concatMap(() => {\n                if (!this.popupWindow || this.popupWindow.closed) {\n                    return <any>['Popup Window Closed'];\n                }\n                let documentOrigin = document.location.host;\n                let popupWindowOrigin = '';\n                try {\n                    popupWindowOrigin = this.popupWindow.location.host;\n                } catch (error) {\n                    // ignore DOMException: Blocked a frame with origin from accessing a cross-origin frame.\n                    //error instanceof DOMException && error.name === 'SecurityError'\n                }\n                if (popupWindowOrigin === documentOrigin && (this.popupWindow.location.search || this.popupWindow.location.hash)) {\n                    const queryParams = this.popupWindow.location.search.substring(1).replace(/\\/$/, '');\n                    const hashParams = this.popupWindow.location.hash.substring(1).replace(/[\\/$]/, '');\n                    const hash = Popup.parseQueryString(hashParams);\n                    const qs = Popup.parseQueryString(queryParams);\n                    this.popupWindow.close();\n                    const allParams = assign({}, qs, hash);\n                    if (allParams.error) {\n                        throw allParams.error;\n                    } else {\n                        return <any>[allParams];\n                    }\n                }\n                return <any>[];\n            })\n            .take(1)\n            .takeWhile((response) => response !== 'Popup Window Closed');\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {Popup} from './popup';\nimport {Http, Response} from '@angular/http';\nimport {joinUrl, assign} from './utils';\nimport {Config, IOauth1Options} from './config';\nimport {Observable} from 'rxjs/Observable';\nimport 'rxjs/add/operator/concatMap';\n\n/**\n * Created by Ron on 17/12/2015.\n */\n\n\n@Injectable()\nexport class Oauth1 {\n    private static base: IOauth1Options = {\n        url: null,\n        name: null,\n        popupOptions: null,\n        redirectUri: null,\n        authorizationEndpoint: null\n    };\n    private defaults: IOauth1Options;\n    constructor(private http: Http, private popup: Popup, private config: Config) {}\n    open(options?: IOauth1Options, userData?: any): Observable<Response> {\n        this.defaults = assign({}, Oauth1.base, options);\n        let popupWindow;\n        let serverUrl = this.config.baseUrl ? joinUrl(this.config.baseUrl, this.defaults.url) : this.defaults.url;\n\n        if (!this.config.cordova) {\n            popupWindow = this.popup.open('', this.defaults.name, this.defaults.popupOptions/*, this.defaults.redirectUri*/);\n        }\n\n        return this.http.post(serverUrl, JSON.stringify(this.defaults))\n            .concatMap((response: Response) => {\n                if (this.config.cordova) {\n                    popupWindow = this.popup.open(\n                        [this.defaults.authorizationEndpoint, this.buildQueryString(response.json())].join('?'),\n                        this.defaults.name,\n                        this.defaults.popupOptions);\n                } else {\n                    popupWindow.popupWindow.location =\n                        [this.defaults.authorizationEndpoint, this.buildQueryString(response.json())].join('?');\n                }\n\n                return this.config.cordova ? popupWindow.eventListener(this.defaults.redirectUri) : popupWindow.pollPopup();\n            })\n            .concatMap((response) => {\n                return this.exchangeForToken(response, userData);\n            });\n    }\n    private exchangeForToken(oauthData, userData?: any) {\n        let data = assign({}, oauthData, userData);\n        let exchangeForTokenUrl = this.config.baseUrl ? joinUrl(this.config.baseUrl, this.defaults.url) : this.defaults.url;\n        return this.http.post(exchangeForTokenUrl, data, { withCredentials: this.config.withCredentials });\n    }\n    private buildQueryString(obj: Object) {\n        return Object.keys(obj).map((key) => {\n            return encodeURIComponent(key) + '=' + encodeURIComponent(obj[key]);\n        }).join('&');\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {Http} from '@angular/http';\nimport {Observable} from 'rxjs/Observable';\nimport {assign, joinUrl, merge, camelCase} from './utils';\nimport {Config, IOauth2Options} from './config';\nimport {Popup} from './popup';\nimport {Storage} from './storage';\nimport 'rxjs/add/operator/concatMap';\n\n/**\n * Created by Ron on 17/12/2015.\n */\n\n\n@Injectable()\nexport class Oauth2 {\n    private static base: IOauth2Options = {\n        defaultUrlParams: ['response_type', 'client_id', 'redirect_uri'],\n        responseType: 'code',\n        responseParams: {\n            code: 'code',\n            clientId: 'clientId',\n            redirectUri: 'redirectUri'\n        }\n    };\n\n    private defaults: IOauth2Options;\n\n    constructor(private http: Http,\n                private popup: Popup,\n                private storage: Storage,\n                private config: Config) {\n    }\n\n    open(options: IOauth2Options, userData?: any) {\n        this.defaults = merge(options, Oauth2.base);\n\n        let url;\n        let openPopup: Observable<any>;\n        let stateName = this.defaults.name + '_state';\n        let state = this.defaults.state;\n        if (typeof state === 'string') {\n            this.storage.set(stateName, state);\n        } else if (typeof state === 'function') {\n            this.storage.set(stateName, state());\n        }\n\n        url = [this.defaults.authorizationEndpoint, this.buildQueryString()].join('?');\n\n        if (this.config.cordova) {\n            openPopup = this.popup\n                .open(url, this.defaults.name, this.defaults.popupOptions/*, this.defaults.redirectUri*/)\n                .eventListener(this.defaults.redirectUri);\n        } else {\n            openPopup = this.popup\n                .open(url, this.defaults.name, this.defaults.popupOptions/*, this.defaults.redirectUri*/)\n                .pollPopup();\n        }\n\n        return openPopup\n            .concatMap((oauthData) => {\n                // when no server URL provided, return popup params as-is.\n                // this is for a scenario when someone wishes to opt out from\n                // satellizer's magic by doing authorization code exchange and\n                // saving a token manually.\n                if (this.defaults.responseType === 'token' || !this.defaults.url) {\n                    return oauthData;\n                }\n\n                if (oauthData.state && oauthData.state !== this.storage.get(stateName)) {\n                    throw 'OAuth \"state\" mismatch';\n                }\n\n                return this.exchangeForToken(oauthData, userData);\n            });\n    }\n\n    private exchangeForToken(oauthData: {code?, state?}, userData?: {}) {\n        let data: any = assign({}, this.defaults, oauthData, userData);\n\n        let exchangeForTokenUrl = this.config.baseUrl ? joinUrl(this.config.baseUrl, this.defaults.url) : this.defaults.url;\n\n        return this.http.post(exchangeForTokenUrl,  JSON.stringify(data), { withCredentials: this.config.withCredentials });\n    }\n\n    private buildQueryString() {\n        let keyValuePairs: string[][] = [];\n        let urlParams = ['defaultUrlParams', 'requiredUrlParams', 'optionalUrlParams'];\n\n        urlParams.forEach((params) => {\n            if (this.defaults[params]) {\n                (<string[]>this.defaults[params]).forEach((paramName) => {\n                    let camelizedName = camelCase(paramName);\n                    let paramValue = typeof this.defaults[paramName] === 'function' ?\n                        this.defaults[paramName]() :\n                        this.defaults[camelizedName];\n\n                    if (paramName === 'state') {\n                        let stateName = this.defaults.name + '_state';\n                        paramValue = encodeURIComponent(this.storage.get(stateName));\n                    }\n\n                    if (paramName === 'scope' && Array.isArray(paramValue)) {\n                        paramValue = paramValue.join(this.defaults.scopeDelimiter);\n\n                        if (this.defaults.scopePrefix) {\n                            paramValue = [this.defaults.scopePrefix, paramValue].join(this.defaults.scopeDelimiter);\n                        }\n                    }\n\n                    keyValuePairs.push([paramName, paramValue]);\n                });\n            }\n        });\n\n        return keyValuePairs.map(function(pair) {\n            return pair.join('=');\n        }).join('&');\n    }\n}\n","import {Injectable, Injector} from '@angular/core';\r\nimport {Oauth1} from './oauth1';\r\nimport {Oauth2} from './oauth2';\r\nimport {Shared} from './shared';\r\nimport {Http, Response, RequestOptionsArgs} from '@angular/http';\r\nimport {joinUrl} from './utils';\r\nimport {Config} from './config';\r\nimport {Observable} from 'rxjs/Observable';\r\nimport 'rxjs/add/operator/do';\r\n\r\n/**\r\n * Created by Ron on 17/12/2015.\r\n */\r\n\r\n@Injectable()\r\nexport class Oauth {\r\n    constructor(private http: Http,\r\n                private injector: Injector,\r\n                private shared: Shared,\r\n                private config: Config) {}\r\n    authenticate(name: string, userData?: any): Observable<Response> {\r\n        // var injector = Injector.resolveAndCreate([Oauth1, Oauth2]);\r\n        let provider: Oauth1 | Oauth2 = this.config.providers[name].type === '1.0' ? this.injector.get(Oauth1) : this.injector.get(Oauth2);\r\n        return provider.open(this.config.providers[name], userData || {})\r\n            .do((response: Response) => {\r\n                // this is for a scenario when someone wishes to opt out from\r\n                // satellizer's magic by doing authorization code exchange and\r\n                // saving a token manually.\r\n                if (this.config.providers[name].url) {\r\n                    this.shared.setToken(response);\r\n                }\r\n            });\r\n    }\r\n    unlink(provider: string, opts: RequestOptionsArgs) {\r\n        opts = opts || {};\r\n        let url = opts.url ? opts.url : joinUrl(this.config.baseUrl, this.config.unlinkUrl);\r\n        opts.body = JSON.stringify({ provider: provider }) || opts.body;\r\n        opts.method = opts.method || 'POST';\r\n        \r\n        return this.http.request(url, opts);\r\n    }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {\r\n    Http,\r\n    RequestMethod,\r\n    Response,\r\n    RequestOptionsArgs,\r\n    Headers,\r\n    Request,\r\n    RequestOptions,\r\n    ConnectionBackend\r\n} from '@angular/http';\r\nimport {Observable} from 'rxjs/Observable';\r\nimport {Config} from './config';\r\nimport {Shared} from './shared';\r\n/**\r\n * Created by Ron on 06/01/2016.\r\n */\r\n\r\n@Injectable()\r\nexport class JwtHttp extends Http {\r\n    constructor(_backend: ConnectionBackend,\r\n                _defaultOptions: RequestOptions,\r\n                private _shared: Shared,\r\n                private _config: Config) {\r\n        super(_backend, _defaultOptions);\r\n    }\r\n\r\n    request(url: string | Request, options?: RequestOptionsArgs): Observable<Response> {\r\n        if (url instanceof Request) {\r\n            url.headers = url.headers || new Headers();\r\n            this.setHeaders(url);\r\n        } else {\r\n            options = options || {};\r\n            this.setHeaders(options);\r\n        }\r\n        return super.request(url, options);\r\n    }\r\n\r\n    get(url: string, options?: RequestOptionsArgs): Observable<Response> {\r\n        options = options || {};\r\n        options.method = RequestMethod.Get;\r\n        return this.request(url, options);\r\n    }\r\n\r\n    post(url: string, body: string, options?: RequestOptionsArgs): Observable<Response> {\r\n        options = options || {};\r\n        options.method = RequestMethod.Post;\r\n        options.body = body;\r\n        return this.request(url, options);\r\n    }\r\n\r\n    put(url: string, body: string, options?: RequestOptionsArgs): Observable<Response> {\r\n        options = options || {};\r\n        options.method = RequestMethod.Put;\r\n        options.body = body;\r\n        return this.request(url, options);\r\n    }\r\n\r\n    delete(url: string, options?: RequestOptionsArgs): Observable<Response> {\r\n        options = options || {};\r\n        options.method = RequestMethod.Delete;\r\n        return this.request(url, options);\r\n    }\r\n\r\n    patch(url: string, body: string, options?: RequestOptionsArgs): Observable<Response> {\r\n        options = options || {};\r\n        options.method = RequestMethod.Patch;\r\n        options.body = body;\r\n        return this.request(url, options);\r\n    }\r\n\r\n    head(url: string, options?: RequestOptionsArgs): Observable<Response> {\r\n        options = options || {};\r\n        options.method = RequestMethod.Head;\r\n        return this.request(url, options);\r\n    }\r\n\r\n    private setHeaders(obj: { headers?: Headers, [index: string]: any }) {\r\n        obj.headers = obj.headers || new Headers();\r\n        if (this._config.defaultHeaders) {\r\n            Object.keys(this._config.defaultHeaders).forEach((defaultHeader) => {\r\n                if (!obj.headers.has(defaultHeader)) {\r\n                    obj.headers.set(defaultHeader, this._config.defaultHeaders[defaultHeader]);\r\n                }\r\n            });\r\n        }\r\n        if (this._shared.isAuthenticated()) {\r\n            obj.headers.set(this._config.authHeader, this._config.authToken + ' ' + this._shared.getToken());\r\n        }\r\n    }\r\n}\r\n"],"names":["__extends","d","b","__","this","constructor","p","hasOwnProperty","prototype","Object","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__metadata","k","v","metadata","_i","src","TypeError","index","source","call","baseUrl","url","test","joined","join","normalize","str","replace","obj1","obj2","result","merge","name","_","separator","letter","offset","toUpperCase","user","userOpts","opts","body","JSON","stringify","method","config","provide","Config","useFactory","Storage","providedConfig","deps","Shared","storage","JwtHttp","xhrBackend","requestOptions","shared","router","XHRBackend","RequestOptions","Oauth","http","injector","Injector","Popup","Oauth1","popup","Oauth2","Local","Auth","local","oauth","facebook","authorizationEndpoint","redirectUri","window","location","origin","requiredUrlParams","scope","scopeDelimiter","display","type","popupOptions","width","height","google","optionalUrlParams","scopePrefix","github","instagram","linkedin","state","twitter","twitch","live","yahoo","bitbucket","keys","forEach","_this","provider","providers","prop","Injectable","isStorageAvailable","supported","storageType","Math","random","toString","substring","setItem","removeItem","e","console","warn","getItem","store","value","tokenPrefix","tokenName","tokenSeparator","get","token","getToken","split","base64Url","base64","parse","decodeURIComponent","encodeURIComponent","atob","response","accessToken","json","access_token","tokenObject","data","tokenRootData","tokenRoot","reduce","o","x","tokenPath","set","remove","exp","isExpired","round","Date","getTime","payload","getPayload","date","setUTCSeconds","Observable","observer","next","complete","fullOpts","getFullOpts","joinUrl","loginUrl","request","setToken","signupUrl","options","assign","left","screenX","outerWidth","top","screenY","outerHeight","map","joinedKeyValue","obj","keyValue","stringifiedOptions","stringifyOptions","prepareOptions","UA","navigator","userAgent","windowName","cordova","indexOf","popupWindow","open","focus","fromEvent","concatMap","event","closed","parser","document","createElement","href","search","hash","queryParams","hashParams","parseQueryString","qs","allParams","close","error","take","takeWhile","interval","documentOrigin","host","popupWindowOrigin","userData","defaults","base","serverUrl","post","buildQueryString","eventListener","pollPopup","exchangeForToken","oauthData","exchangeForTokenUrl","withCredentials","openPopup","stateName","responseType","keyValuePairs","urlParams","params","paramName","camelizedName","camelCase","paramValue","Array","isArray","push","pair","defaultUrlParams","responseParams","code","clientId","unlinkUrl","_backend","_defaultOptions","_shared","_config","_super","Request","headers","Headers","setHeaders","RequestMethod","Get","Post","Put","Delete","Patch","Head","defaultHeaders","defaultHeader","has","isAuthenticated","authHeader","authToken","Http","login","signup","logout","authenticate","unlink","removeToken","setStorageType","getExpirationDate"],"mappings":"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"}