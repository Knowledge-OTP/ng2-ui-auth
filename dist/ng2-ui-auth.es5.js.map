{"version":3,"file":"ng2-ui-auth.es5.js","sources":["ts/src/ng2-ui-auth.ts","ts/src/ng2-ui-auth.module.ts","ts/src/auth.service.ts","ts/src/local.service.ts","ts/src/oauth2.service.ts","ts/src/oauth.service.ts","ts/src/oauth1.service.ts","ts/src/popup.service.ts","ts/src/utils.ts","ts/src/jwt-http.service.ts","ts/src/shared.service.ts","ts/src/storage.service.ts","ts/src/config.service.ts"],"sourcesContent":["/**\n * Generated bundle index. Do not edit.\n */\n\nexport {Ng2UiAuthModule,LocalService,Oauth2Service,Oauth1Service,PopupService,OauthService,JwtHttp,SharedService,StorageService,BrowserStorageService,AuthService,ConfigService,CustomConfig} from './ng2-ui-auth.module';\n","/**\n * Created by Ron on 25/12/2015.\n */\n\nimport {CustomConfig, ConfigService} from './config.service';\nimport {SharedService} from './shared.service';\nimport {JwtHttp} from './jwt-http.service';\nimport {OauthService} from './oauth.service';\nimport {PopupService} from './popup.service';\nimport {Oauth1Service} from './oauth1.service';\nimport {Oauth2Service} from './oauth2.service';\nimport {LocalService} from './local.service';\nimport {AuthService} from './auth.service';\nimport {StorageService, BrowserStorageService} from './storage.service';\nimport {ModuleWithProviders, NgModule, Injector, Type} from '@angular/core';\nimport {HttpModule, Http} from '@angular/http';\nexport class Ng2UiAuthModule {\n/**\n * @param {?} config\n * @param {?} httpProvider\n * @return {?}\n */\nstatic forRootWithCustomHttp(config: Type<CustomConfig>, httpProvider: any): ModuleWithProviders {\n        return {\n            ngModule: Ng2UiAuthModule,\n            providers: [\n                {provide: CustomConfig, useClass: config },\n                {provide: ConfigService, useClass: ConfigService, deps: [CustomConfig] },\n                {provide: StorageService, useClass: BrowserStorageService, deps: [ConfigService]},\n                {provide: SharedService,  useClass: SharedService, deps: [StorageService, ConfigService]},\n                httpProvider,\n                {provide: OauthService,  useClass: OauthService, deps: [JwtHttp, Injector, SharedService, ConfigService]} ,\n                {provide: PopupService,  useClass: PopupService, deps: [ConfigService]},\n                {provide: Oauth1Service,  useClass: Oauth1Service, deps: [JwtHttp, PopupService, ConfigService]} ,\n                {provide: Oauth2Service,  useClass: Oauth2Service, deps: [JwtHttp, PopupService, StorageService, ConfigService]} ,\n                {provide: LocalService,  useClass: LocalService, deps: [JwtHttp, SharedService, ConfigService]} ,\n                {provide: AuthService,  useClass: AuthService, deps: [SharedService, LocalService, OauthService]} ,]\n        }\n    }\n/**\n * @param {?} config\n * @return {?}\n */\nstatic forRoot(config: Type<CustomConfig>): ModuleWithProviders {\n        return {\n            ngModule: Ng2UiAuthModule,\n            providers: [\n                {provide: CustomConfig, useClass: config },\n                {provide: ConfigService, useClass: ConfigService, deps: [CustomConfig] },\n                {provide: StorageService, useClass: BrowserStorageService, deps: [ConfigService]},\n                {provide: SharedService,  useClass: SharedService, deps: [StorageService, ConfigService]},\n                {provide: JwtHttp, useClass: JwtHttp, deps: [Http, SharedService, ConfigService]},\n                {provide: OauthService,  useClass: OauthService, deps: [JwtHttp, Injector, SharedService, ConfigService]} ,\n                {provide: PopupService,  useClass: PopupService, deps: [ConfigService]},\n                {provide: Oauth1Service,  useClass: Oauth1Service, deps: [JwtHttp, PopupService, ConfigService]} ,\n                {provide: Oauth2Service,  useClass: Oauth2Service, deps: [JwtHttp, PopupService, StorageService, ConfigService]} ,\n                {provide: LocalService,  useClass: LocalService, deps: [JwtHttp, SharedService, ConfigService]} ,\n                {provide: AuthService,  useClass: AuthService, deps: [SharedService, LocalService, OauthService]} ,]\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [HttpModule]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction Ng2UiAuthModule_tsickle_Closure_declarations() {\n/** @type {?} */\nNg2UiAuthModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNg2UiAuthModule.ctorParameters;\n}\n\n\nexport {\n    LocalService,\n    Oauth2Service,\n    Oauth1Service,\n    PopupService,\n    OauthService,\n    JwtHttp,\n    SharedService,\n    StorageService, BrowserStorageService,\n    AuthService,\n    ConfigService, CustomConfig\n};\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {Injectable} from '@angular/core';\nimport {RequestOptionsArgs, Response} from '@angular/http';\nimport {SharedService} from './shared.service';\nimport {LocalService} from './local.service';\nimport {OauthService} from './oauth.service';\nimport {Observable} from 'rxjs/Observable';\n/**\n * Created by Ron on 17/12/2015.\n */\nexport class AuthService {\n/**\n * @param {?} shared\n * @param {?} local\n * @param {?} oauth\n */\nconstructor(private shared: SharedService,\nprivate local: LocalService,\nprivate oauth: OauthService) {\n    }\n/**\n * @param {?} user\n * @param {?=} opts\n * @return {?}\n */\nlogin(user, opts?: RequestOptionsArgs): Observable<Response> {\n        return this.local.login(user, opts);\n    }\n/**\n * @param {?} user\n * @param {?=} opts\n * @return {?}\n */\nsignup(user, opts?: RequestOptionsArgs): Observable<Response> {\n        return this.local.signup(user, opts);\n    }\n/**\n * @return {?}\n */\nlogout(): Observable<void> {\n        return this.shared.logout();\n    }\n/**\n * @param {?} name\n * @param {?=} userData\n * @param {?=} oauth\n * @return {?}\n */\nauthenticate(name: string, userData?: any, oauth?: any): Observable<Response> {\n        return this.oauth.authenticate(name, userData, oauth);\n    }\n/**\n * @param {?} name\n * @param {?=} userData\n * @return {?}\n */\nlink(name: string, userData?: any): Observable<Response> {\n        return this.oauth.authenticate(name, userData);\n    }\n/**\n * @param {?} provider\n * @param {?} opts\n * @return {?}\n */\nunlink(provider: string, opts: RequestOptionsArgs): Observable<Response> {\n        return this.oauth.unlink(provider, opts);\n    }\n/**\n * @return {?}\n */\nisAuthenticated(): boolean {\n        return this.shared.isAuthenticated();\n    }\n/**\n * @return {?}\n */\ngetToken(): string {\n        return this.shared.getToken();\n    }\n/**\n * @param {?} token\n * @return {?}\n */\nsetToken(token: string | Response): void {\n        this.shared.setToken(token);\n    }\n/**\n * @return {?}\n */\nremoveToken(): void {\n        this.shared.removeToken();\n    }\n/**\n * @return {?}\n */\ngetPayload(): any {\n        return this.shared.getPayload();\n    }\n/**\n * @param {?} type\n * @return {?}\n */\nsetStorageType(type: 'localStorage' | 'sessionStorage' | 'cookie' | 'sessionCookie'): void {\n        this.shared.setStorageType(type);\n    }\n/**\n * @return {?}\n */\ngetExpirationDate(): Date {\n        return this.shared.getExpirationDate();\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: SharedService, },\n{type: LocalService, },\n{type: OauthService, },\n];\n}\n\nfunction AuthService_tsickle_Closure_declarations() {\n/** @type {?} */\nAuthService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nAuthService.ctorParameters;\n/** @type {?} */\nAuthService.prototype.shared;\n/** @type {?} */\nAuthService.prototype.local;\n/** @type {?} */\nAuthService.prototype.oauth;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {Injectable} from '@angular/core';\nimport {SharedService} from './shared.service';\nimport {ConfigService} from './config.service';\nimport {RequestOptionsArgs, Response} from '@angular/http';\nimport {joinUrl} from './utils';\nimport {Observable} from 'rxjs/Observable';\nimport'rxjs/add/operator/do';\nimport {JwtHttp} from './jwt-http.service';\n/**\n * Created by Ron on 17/12/2015.\n * @param {?} user\n * @param {?=} userOpts\n * @return {?}\n */\nfunction getFullOpts(user: string | Object, userOpts?: RequestOptionsArgs) {\n    const /** @type {?} */ opts = userOpts || {};\n    if (user) {\n        opts.body = typeof user === 'string' ? user : JSON.stringify(user);\n    }\n    opts.method = opts.method || 'POST';\n    return opts;\n}\nexport class LocalService {\n/**\n * @param {?} http\n * @param {?} shared\n * @param {?} config\n */\nconstructor(private http: JwtHttp,\nprivate shared: SharedService,\nprivate config: ConfigService) {}\n/**\n * @param {?} user\n * @param {?=} opts\n * @return {?}\n */\nlogin(user: string | Object, opts?: RequestOptionsArgs): Observable<Response> {\n        const /** @type {?} */ fullOpts = getFullOpts(user, opts);\n        const /** @type {?} */ url = fullOpts.url ? fullOpts.url : joinUrl(this.config.baseUrl, this.config.loginUrl);\n\n        return this.http.request(url, fullOpts)\n            .do((response: Response) => this.shared.setToken(response));\n    }\n/**\n * @param {?} user\n * @param {?=} opts\n * @return {?}\n */\nsignup(user: string | Object, opts?: RequestOptionsArgs): Observable<Response> {\n        const /** @type {?} */ fullOpts = getFullOpts(user, opts);\n        const /** @type {?} */ url = fullOpts.url ? fullOpts.url : joinUrl(this.config.baseUrl, this.config.signupUrl);\n\n        return this.http.request(url, getFullOpts(user, fullOpts));\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: JwtHttp, },\n{type: SharedService, },\n{type: ConfigService, },\n];\n}\n\nfunction LocalService_tsickle_Closure_declarations() {\n/** @type {?} */\nLocalService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nLocalService.ctorParameters;\n/** @type {?} */\nLocalService.prototype.http;\n/** @type {?} */\nLocalService.prototype.shared;\n/** @type {?} */\nLocalService.prototype.config;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {Injectable} from '@angular/core';\nimport {Observable} from 'rxjs/Observable';\nimport {assign, camelCase, joinUrl, merge} from './utils';\nimport {ConfigService, IOauth2Options} from './config.service';\nimport {PopupService} from './popup.service';\nimport {StorageService} from './storage.service';\nimport'rxjs/add/operator/switchMap';\nimport'rxjs/add/observable/of';\nimport {JwtHttp} from './jwt-http.service';\n/**\n * Created by Ron on 17/12/2015.\n */\nexport class Oauth2Service {\nprivate static base: IOauth2Options & { defaultUrlParams: string[] } = {\n        defaultUrlParams: ['response_type', 'client_id', 'redirect_uri'],\n        responseType: 'code',\n        responseParams: {\n            code: 'code',\n            clientId: 'clientId',\n            redirectUri: 'redirectUri'\n        }\n    };\nprivate defaults: IOauth2Options & { defaultUrlParams: string[] };\n/**\n * @param {?} http\n * @param {?} popup\n * @param {?} storage\n * @param {?} config\n */\nconstructor(private http: JwtHttp,\nprivate popup: PopupService,\nprivate storage: StorageService,\nprivate config: ConfigService) {\n    }\n/**\n * @param {?} options\n * @param {?=} userData\n * @return {?}\n */\nopen(options: IOauth2Options, userData?: any) {\n        this.defaults = merge(options, Oauth2Service.base);\n\n        let /** @type {?} */ url;\n        let /** @type {?} */ openPopup: Observable<any>;\n        const /** @type {?} */ stateName = this.defaults.name + '_state';\n        const /** @type {?} */ state = this.defaults.state;\n        const /** @type {?} */ exp = new Date(Date.now() + 60 * 60 * 1000).toUTCString();\n        if (typeof state === 'string') {\n            this.storage.set(stateName, state, exp);\n        } else if (typeof state === 'function') {\n            this.storage.set(stateName, state(), exp);\n        }\n\n        url = [this.defaults.authorizationEndpoint, this.buildQueryString()].join('?');\n\n        if (this.config.cordova) {\n            openPopup = this.popup\n                .open(url, this.defaults.name, this.defaults.popupOptions/*, this.defaults.redirectUri*/)\n                .eventListener(this.defaults.redirectUri);\n        } else {\n            openPopup = this.popup\n                .open(url, this.defaults.name, this.defaults.popupOptions/*, this.defaults.redirectUri*/)\n                .pollPopup();\n        }\n\n        return openPopup\n            .switchMap((oauthData) => {\n                // when no server URL provided, return popup params as-is.\n                // this is for a scenario when someone wishes to opt out from\n                // satellizer's magic by doing authorization code exchange and\n                // saving a token manually.\n                if (this.defaults.responseType === 'token' || !this.defaults.url) {\n                    return Observable.of(oauthData);\n                }\n\n                if (oauthData.state && oauthData.state !== this.storage.get(stateName)) {\n                    throw 'OAuth \"state\" mismatch';\n                }\n                let /** @type {?} */ exchangeForToken: any = options.exchangeForToken;\n                if (typeof exchangeForToken !== 'function') {\n                    exchangeForToken = this.exchangeForToken.bind(this);\n                }\n                return exchangeForToken(oauthData, userData);\n            });\n    }\n/**\n * @param {?} oauthData\n * @param {?=} userData\n * @return {?}\n */\nprivate exchangeForToken(oauthData: { code?: string, state?: string }, userData?: {}) {\n        let /** @type {?} */ data: any = assign({}, this.defaults, oauthData, userData);\n\n        let /** @type {?} */ exchangeForTokenUrl = this.config.baseUrl ? joinUrl(this.config.baseUrl, this.defaults.url) : this.defaults.url;\n\n        return this.defaults.method\n            ? this.http.request(exchangeForTokenUrl, {\n                body: JSON.stringify(data),\n                withCredentials: this.config.withCredentials,\n                method: this.defaults.method\n            })\n            : this.http.post(exchangeForTokenUrl, JSON.stringify(data), {withCredentials: this.config.withCredentials});\n    }\n/**\n * @return {?}\n */\nprivate buildQueryString() {\n        let /** @type {?} */ keyValuePairs: string[][] = [];\n        let /** @type {?} */ urlParams = ['defaultUrlParams', 'requiredUrlParams', 'optionalUrlParams'];\n\n        urlParams.forEach((params) => {\n            if (this.defaults[params]) {\n                ( /** @type {?} */((<string[]>this.defaults[params]))).forEach((paramName) => {\n                    let /** @type {?} */ camelizedName = camelCase(paramName);\n                    let /** @type {?} */ paramValue = typeof this.defaults[paramName] === 'function' ?\n                        this.defaults[paramName]() :\n                        this.defaults[camelizedName];\n\n                    if (paramName === 'state') {\n                        let /** @type {?} */ stateName = this.defaults.name + '_state';\n                        paramValue = encodeURIComponent(this.storage.get(stateName));\n                    }\n\n                    if (paramName === 'scope' && Array.isArray(paramValue)) {\n                        paramValue = paramValue.join(this.defaults.scopeDelimiter);\n\n                        if (this.defaults.scopePrefix) {\n                            paramValue = [this.defaults.scopePrefix, paramValue].join(this.defaults.scopeDelimiter);\n                        }\n                    }\n\n                    if (params !== 'optionalUrlParams' || typeof paramValue !== 'undefined') {\n                        keyValuePairs.push([paramName, paramValue]);\n                    }\n                });\n            }\n        });\n\n        return keyValuePairs.map(function (pair) {\n            return pair.join('=');\n        }).join('&');\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: JwtHttp, },\n{type: PopupService, },\n{type: StorageService, },\n{type: ConfigService, },\n];\n}\n\nfunction Oauth2Service_tsickle_Closure_declarations() {\n/** @type {?} */\nOauth2Service.base;\n/** @type {?} */\nOauth2Service.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nOauth2Service.ctorParameters;\n/** @type {?} */\nOauth2Service.prototype.defaults;\n/** @type {?} */\nOauth2Service.prototype.http;\n/** @type {?} */\nOauth2Service.prototype.popup;\n/** @type {?} */\nOauth2Service.prototype.storage;\n/** @type {?} */\nOauth2Service.prototype.config;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {Injectable, Injector} from '@angular/core';\nimport {Oauth1Service} from './oauth1.service';\nimport {Oauth2Service} from './oauth2.service';\nimport {SharedService} from './shared.service';\nimport {Response, RequestOptionsArgs} from '@angular/http';\nimport {joinUrl} from './utils';\nimport {ConfigService, IOauth1Options} from './config.service';\nimport {Observable} from 'rxjs/Observable';\nimport'rxjs/add/operator/do';\nimport {JwtHttp} from './jwt-http.service';\n/**\n * Created by Ron on 17/12/2015.\n */\nexport class OauthService {\n/**\n * @param {?} http\n * @param {?} injector\n * @param {?} shared\n * @param {?} config\n */\nconstructor(private http: JwtHttp,\nprivate injector: Injector,\nprivate shared: SharedService,\nprivate config: ConfigService) {}\n/**\n * @param {?} name\n * @param {?=} userData\n * @param {?=} oauth\n * @return {?}\n */\nauthenticate(name: string, userData?: any, oauth?: any): Observable<Response> {\n        // var injector = Injector.resolveAndCreate([Oauth1, Oauth2]);\n        const /** @type {?} */ provider: { open(options?: any, userData?: any): Observable<any> } = this.config.providers[name].oauthType === '1.0' ? this.injector.get(Oauth1Service) : oauth;\n        return provider.open(this.config.providers[name], userData || {})\n            .do((response: Response) => {\n                // this is for a scenario when someone wishes to opt out from\n                // satellizer's magic by doing authorization code exchange and\n                // saving a token manually.\n                if (this.config.providers[name].url) {\n                    this.shared.setToken(response);\n                }\n            });\n    }\n/**\n * @param {?} provider\n * @param {?} opts\n * @return {?}\n */\nunlink(provider: string, opts: RequestOptionsArgs) {\n        opts = opts || {};\n        let /** @type {?} */ url = opts.url ? opts.url : joinUrl(this.config.baseUrl, this.config.unlinkUrl);\n        opts.body = JSON.stringify({ provider: provider }) || opts.body;\n        opts.method = opts.method || 'POST';\n\n        return this.http.request(url, opts);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: JwtHttp, },\n{type: Injector, },\n{type: SharedService, },\n{type: ConfigService, },\n];\n}\n\nfunction OauthService_tsickle_Closure_declarations() {\n/** @type {?} */\nOauthService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nOauthService.ctorParameters;\n/** @type {?} */\nOauthService.prototype.http;\n/** @type {?} */\nOauthService.prototype.injector;\n/** @type {?} */\nOauthService.prototype.shared;\n/** @type {?} */\nOauthService.prototype.config;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {Injectable} from '@angular/core';\nimport {PopupService} from './popup.service';\nimport {Response} from '@angular/http';\nimport {assign, joinUrl} from './utils';\nimport {ConfigService, IOauth1Options} from './config.service';\nimport {Observable} from 'rxjs/Observable';\nimport'rxjs/add/operator/switchMap';\nimport {JwtHttp} from './jwt-http.service';\n/**\n * Created by Ron on 17/12/2015.\n */\nexport class Oauth1Service {\nprivate static base: IOauth1Options = {\n        url: null,\n        name: null,\n        popupOptions: null,\n        redirectUri: null,\n        authorizationEndpoint: null\n    };\nprivate defaults: IOauth1Options;\n/**\n * @param {?} http\n * @param {?} popup\n * @param {?} config\n */\nconstructor(private http: JwtHttp,\nprivate popup: PopupService,\nprivate config: ConfigService) {\n    }\n/**\n * @param {?=} options\n * @param {?=} userData\n * @return {?}\n */\nopen(options?: IOauth1Options, userData?: any): Observable<Response> {\n        this.defaults = assign({}, Oauth1Service.base, options);\n        let /** @type {?} */ popupWindow;\n        let /** @type {?} */ serverUrl = this.config.baseUrl ? joinUrl(this.config.baseUrl, this.defaults.url) : this.defaults.url;\n\n        if (!this.config.cordova) {\n            popupWindow = this.popup.open('', this.defaults.name, this.defaults.popupOptions/*, this.defaults.redirectUri*/);\n        }\n\n        return this.http.post(serverUrl, JSON.stringify(this.defaults))\n            .switchMap((response: Response) => {\n                if (this.config.cordova) {\n                    popupWindow = this.popup.open(\n                        [this.defaults.authorizationEndpoint, this.buildQueryString(response.json())].join('?'),\n                        this.defaults.name,\n                        this.defaults.popupOptions);\n                } else {\n                    popupWindow.popupWindow.location =\n                        [this.defaults.authorizationEndpoint, this.buildQueryString(response.json())].join('?');\n                }\n\n                return this.config.cordova ? popupWindow.eventListener(this.defaults.redirectUri) : popupWindow.pollPopup();\n            })\n            .switchMap((response) => {\n                let /** @type {?} */ exchangeForToken: any = options.exchangeForToken;\n                if (typeof exchangeForToken !== 'function') {\n                    exchangeForToken = this.exchangeForToken.bind(this);\n                }\n                return exchangeForToken(response, userData);\n            });\n    }\n/**\n * @param {?} oauthData\n * @param {?=} userData\n * @return {?}\n */\nprivate exchangeForToken(oauthData, userData?: any) {\n        let /** @type {?} */ data = assign({}, this.defaults, oauthData, userData);\n        let /** @type {?} */ exchangeForTokenUrl = this.config.baseUrl ? joinUrl(this.config.baseUrl, this.defaults.url) : this.defaults.url;\n        return this.defaults.method\n            ? this.http.request(exchangeForTokenUrl, {\n                body: JSON.stringify(data),\n                withCredentials: this.config.withCredentials,\n                method: this.defaults.method\n            })\n            : this.http.post(exchangeForTokenUrl, data, {withCredentials: this.config.withCredentials});\n    }\n/**\n * @param {?} obj\n * @return {?}\n */\nprivate buildQueryString(obj: Object) {\n        return Object.keys(obj).map((key) => {\n            return encodeURIComponent(key) + '=' + encodeURIComponent(obj[key]);\n        }).join('&');\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: JwtHttp, },\n{type: PopupService, },\n{type: ConfigService, },\n];\n}\n\nfunction Oauth1Service_tsickle_Closure_declarations() {\n/** @type {?} */\nOauth1Service.base;\n/** @type {?} */\nOauth1Service.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nOauth1Service.ctorParameters;\n/** @type {?} */\nOauth1Service.prototype.defaults;\n/** @type {?} */\nOauth1Service.prototype.http;\n/** @type {?} */\nOauth1Service.prototype.popup;\n/** @type {?} */\nOauth1Service.prototype.config;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {Injectable} from '@angular/core';\nimport {Observable} from 'rxjs/Observable';\nimport {assign} from './utils';\nimport {ConfigService, IPopupOptions} from './config.service';\nimport'rxjs/add/observable/interval';\nimport'rxjs/add/observable/fromEvent';\nimport'rxjs/add/observable/throw';\nimport'rxjs/add/observable/empty';\nimport'rxjs/add/observable/merge';\nimport'rxjs/add/operator/switchMap';\nimport'rxjs/add/operator/take';\nimport'rxjs/add/operator/map';\n\nimport'rxjs/add/operator/takeWhile';\nimport'rxjs/add/operator/delay';\n/**\n * Created by Ron on 17/12/2015.\n */\nexport class PopupService {\n    url = '';\n    popupWindow: Window = null;\n/**\n * @param {?} config\n */\nconstructor(private config: ConfigService) {}\n/**\n * @param {?} url\n * @param {?} name\n * @param {?} options\n * @return {?}\n */\nopen(url: string, name: string, options: IPopupOptions) {\n        this.url = url;\n\n        let /** @type {?} */ stringifiedOptions = this.stringifyOptions(this.prepareOptions(options));\n        let /** @type {?} */ UA = window.navigator.userAgent;\n        let /** @type {?} */ windowName = (this.config.cordova || UA.indexOf('CriOS') > -1) ? '_blank' : name;\n\n        this.popupWindow = window.open(url, windowName, stringifiedOptions);\n\n        window['popup'] = this.popupWindow;\n\n        if (this.popupWindow && this.popupWindow.focus) {\n            this.popupWindow.focus();\n        }\n\n        return this;\n    }\n/**\n * @param {?} redirectUri\n * @return {?}\n */\neventListener(redirectUri: string) {\n        return Observable\n            .merge(\n                Observable.fromEvent(this.popupWindow, 'loadstart')\n                .switchMap((event: Event & { url: string }) => {\n\n                    if (!this.popupWindow || this.popupWindow.closed) {\n                        return Observable.throw(new Error('Authentication Canceled'));\n                    }\n                    if (event.url.indexOf(redirectUri) !== 0) {\n                        return Observable.empty();\n                    }\n\n                    let /** @type {?} */ parser = document.createElement('a');\n                    parser.href = event.url;\n\n                    if (parser.search || parser.hash) {\n                        const /** @type {?} */ queryParams = parser.search.substring(1).replace(/\\/$/, '');\n                        const /** @type {?} */ hashParams = parser.hash.substring(1).replace(/\\/$/, '');\n                        const /** @type {?} */ hash = this.parseQueryString(hashParams);\n                        const /** @type {?} */ qs = this.parseQueryString(queryParams);\n                        const /** @type {?} */ allParams = assign({}, qs, hash);\n\n                        this.popupWindow.close();\n\n                        if (allParams.error) {\n                            throw allParams.error;\n                        } else {\n                            return Observable.of(allParams);\n                        }\n                    }\n                    return Observable.empty();\n                }), Observable.fromEvent<Event>(this.popupWindow, 'exit').delay(100).map(() => {throw new Error('Authentication Canceled')})\n                       ).take(1);\n    }\n/**\n * @return {?}\n */\npollPopup() {\n        return Observable\n            .interval(50)\n            .switchMap(() => {\n                if (!this.popupWindow || this.popupWindow.closed) {\n                    return Observable.throw(new Error('Authentication Canceled'));\n                }\n                let /** @type {?} */ documentOrigin = document.location.host;\n                let /** @type {?} */ popupWindowOrigin = '';\n                try {\n                    popupWindowOrigin = this.popupWindow.location.host;\n                } catch ( /** @type {?} */error) {\n                    // ignore DOMException: Blocked a frame with origin from accessing a cross-origin frame.\n                    //error instanceof DOMException && error.name === 'SecurityError'\n                }\n                if (popupWindowOrigin === documentOrigin && (this.popupWindow.location.search || this.popupWindow.location.hash)) {\n                    const /** @type {?} */ queryParams = this.popupWindow.location.search.substring(1).replace(/\\/$/, '');\n                    const /** @type {?} */ hashParams = this.popupWindow.location.hash.substring(1).replace(/[\\/$]/, '');\n                    const /** @type {?} */ hash = this.parseQueryString(hashParams);\n                    const /** @type {?} */ qs = this.parseQueryString(queryParams);\n                    this.popupWindow.close();\n                    const /** @type {?} */ allParams = assign({}, qs, hash);\n                    if (allParams.error) {\n                        throw allParams.error;\n                    } else {\n                        return Observable.of(allParams);\n                    }\n                }\n                return Observable.empty();\n            })\n            .take(1);\n    }\n/**\n * @param {?} options\n * @return {?}\n */\nprivate prepareOptions(options: IPopupOptions) {\n        options = options || {};\n        let /** @type {?} */ width = options.width || 500;\n        let /** @type {?} */ height = options.height || 500;\n        return assign(\n            {\n                width: width,\n                height: height,\n                left: window.screenX + ((window.outerWidth - width) / 2),\n                top: window.screenY + ((window.outerHeight - height) / 2.5),\n                toolbar: options.visibleToolbar ? 'yes': 'no'\n            },\n            options);\n    }\n/**\n * @param {?} options\n * @return {?}\n */\nprivate stringifyOptions(options: Object) {\n        return Object.keys(options).map((key) => {\n            return key + '=' + options[key];\n        }).join(',');\n    }\n/**\n * @param {?} joinedKeyValue\n * @return {?}\n */\nprivate parseQueryString(joinedKeyValue: string): any {\n        let /** @type {?} */ key, /** @type {?} */ value;\n        return joinedKeyValue.split('&').reduce(\n            (obj, keyValue) => {\n                if (keyValue) {\n                    value = keyValue.split('=');\n                    key = decodeURIComponent(value[0]);\n                    obj[key] = typeof value[1] !== 'undefined' ? decodeURIComponent(value[1]) : true;\n                }\n                return obj;\n            },\n            {});\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ConfigService, },\n];\n}\n\nfunction PopupService_tsickle_Closure_declarations() {\n/** @type {?} */\nPopupService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nPopupService.ctorParameters;\n/** @type {?} */\nPopupService.prototype.url;\n/** @type {?} */\nPopupService.prototype.popupWindow;\n/** @type {?} */\nPopupService.prototype.config;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","\n/**\n * Created by Ron on 17/12/2015.\n * @param {?} target\n * @param {...?} src\n * @return {?}\n */\nexport function assign(target: any, ...src: any[]): any {\n    if (target == null) {\n        throw new TypeError('Cannot convert undefined or null to object');\n    }\n\n    target = Object(target);\n    for (var /** @type {?} */ index = 1; index < arguments.length; index++) {\n        var /** @type {?} */ source = arguments[index];\n        if (source != null) {\n            for (var /** @type {?} */ key in source) {\n                if (Object.prototype.hasOwnProperty.call(source, key)) {\n                    target[key] = source[key];\n                }\n            }\n        }\n    }\n    return target;\n}\n/**\n * @param {?} baseUrl\n * @param {?} url\n * @return {?}\n */\nexport function joinUrl(baseUrl: string, url: string) {\n    if (/^(?:[a-z]+:)?\\/\\//i.test(url)) {\n        return url;\n    }\n\n    let /** @type {?} */ joined = [baseUrl, url].join('/');\n\n    let /** @type {?} */ normalize = function(str) {\n        return str\n            .replace(/[\\/]+/g, '/')\n            .replace(/\\/\\?/g, '?')\n            .replace(/\\/\\#/g, '#')\n            .replace(/\\:\\//g, '://');\n    };\n\n    return normalize(joined);\n}\n/**\n * @param {?} obj1\n * @param {?} obj2\n * @return {?}\n */\nexport function merge(obj1: object, obj2: object): any {\n    let /** @type {?} */ result = {};\n    for (var /** @type {?} */ i in obj1) {\n        if (obj1.hasOwnProperty(i)) {\n            if ((i in obj2) && (typeof obj1[i] === 'object') && (i !== null)) {\n                result[i] = merge(obj1[i], obj2[i]);\n            } else {\n                result[i] = obj1[i];\n            }\n        }\n    }\n    for (i in obj2) {\n        if (obj2.hasOwnProperty(i)) {\n            if (i in result) {\n                continue;\n            }\n            result[i] = obj2[i];\n        }\n\n    }\n    return result;\n}\n/**\n * @param {?} name\n * @return {?}\n */\nexport function camelCase(name) {\n    return name.replace(/([\\:\\-\\_]+(.))/g, function(_, separator, letter, offset) {\n        return offset ? letter.toUpperCase() : letter;\n    });\n}\n","import {Injectable} from '@angular/core';\nimport {Http, RequestMethod, Response, RequestOptionsArgs, Headers, Request} from '@angular/http';\nimport {Observable} from 'rxjs/Observable';\nimport'rxjs/add/operator/switchMap';\nimport'rxjs/add/operator/catch';\nimport {ConfigService} from './config.service';\nimport {SharedService} from './shared.service';\n/**\n * Created by Ron on 06/01/2016.\n */\n\nexport interface JwtRequestOptionsArgs extends RequestOptionsArgs {\n    autoRefreshToken?: boolean\n}\nexport class JwtHttp {\n/**\n * @param {?} _http\n * @param {?} _shared\n * @param {?} _config\n */\nconstructor(\nprivate _http: Http,\nprivate _shared: SharedService,\nprivate _config: ConfigService\n    ) {}\n/**\n * @param {?} url\n * @param {?=} options\n * @return {?}\n */\nrequest(url: string | Request, options?: JwtRequestOptionsArgs): Observable<Response> {\n        //if the token is expired the \"getExpirationDate\" function returns null\n        const /** @type {?} */ exp = this._shared.getExpirationDate();\n        if (this._shared.getToken() &&\n            (!exp || exp.getTime() + this._config.refreshBeforeExpiration > Date.now())  &&\n            (options.autoRefreshToken ||\n            typeof options.autoRefreshToken === 'undefined' && this._config.autoRefreshToken)) {\n            return this.refreshToken()\n                .switchMap(() => this.actualRequest(url, options));\n        }\n        if (this._config.tryTokenRefreshIfUnauthorized) {\n            return this.actualRequest(url, options)\n                .catch((response: Response) => {\n                    if (response.status === 401) {\n                        return this.refreshToken()\n                            .switchMap(() => this.actualRequest(url, options));\n                    }\n                    throw response;\n                })\n        }\n        return this.actualRequest(url, options);\n    }\n/**\n * @param {?} url\n * @param {?=} options\n * @return {?}\n */\nget(url: string, options?: JwtRequestOptionsArgs): Observable<Response> {\n        options = options || {};\n        options.method = RequestMethod.Get;\n        return this.request(url, options);\n    }\n/**\n * @param {?} url\n * @param {?} body\n * @param {?=} options\n * @return {?}\n */\npost(url: string, body: any, options?: JwtRequestOptionsArgs): Observable<Response> {\n        options = options || {};\n        options.method = RequestMethod.Post;\n        options.body = body;\n        return this.request(url, options);\n    }\n/**\n * @param {?} url\n * @param {?} body\n * @param {?=} options\n * @return {?}\n */\nput(url: string, body: any, options?: JwtRequestOptionsArgs): Observable<Response> {\n        options = options || {};\n        options.method = RequestMethod.Put;\n        options.body = body;\n        return this.request(url, options);\n    }\n/**\n * @param {?} url\n * @param {?=} options\n * @return {?}\n */\ndelete(url: string, options?: JwtRequestOptionsArgs): Observable<Response> {\n        options = options || {};\n        options.method = RequestMethod.Delete;\n        return this.request(url, options);\n    }\n/**\n * @param {?} url\n * @param {?} body\n * @param {?=} options\n * @return {?}\n */\npatch(url: string, body: any, options?: JwtRequestOptionsArgs): Observable<Response> {\n        options = options || {};\n        options.method = RequestMethod.Patch;\n        options.body = body;\n        return this.request(url, options);\n    }\n/**\n * @param {?} url\n * @param {?=} options\n * @return {?}\n */\nhead(url: string, options?: JwtRequestOptionsArgs): Observable<Response> {\n        options = options || {};\n        options.method = RequestMethod.Head;\n        return this.request(url, options);\n    }\n/**\n * @return {?}\n */\nrefreshToken(): Observable<Response> {\n        const /** @type {?} */ authHeader = new Headers();\n        authHeader.append(this._config.authHeader, (this._config.authToken + ' ' + this._shared.getToken()));\n        return this._http\n            .get(this._config.refreshUrl, {\n                headers: authHeader\n            })\n            .do((res: Response) => this._shared.setToken(res));\n    }\n/**\n * @param {?} url\n * @param {?=} options\n * @return {?}\n */\nprotected actualRequest(url: string | Request, options?: JwtRequestOptionsArgs) {\n        if (url instanceof Request) {\n            url.headers = url.headers || new Headers();\n            this.setHeaders(url);\n        } else {\n            options = options || {};\n            this.setHeaders(options);\n        }\n        return this._http.request(url, options);\n    }\n/**\n * @param {?} obj\n * @return {?}\n */\nprotected setHeaders(obj: { headers?: Headers, [index: string]: any }) {\n        obj.headers = obj.headers || new Headers();\n        if (this._config.defaultHeaders) {\n            Object.keys(this._config.defaultHeaders).forEach((defaultHeader) => {\n                if (!obj.headers.has(defaultHeader)) {\n                    obj.headers.set(defaultHeader, this._config.defaultHeaders[defaultHeader]);\n                }\n            });\n        }\n        if (this._shared.isAuthenticated()) {\n            obj.headers.set(this._config.authHeader, this._config.authToken + ' ' + this._shared.getToken());\n        }\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Http, },\n{type: SharedService, },\n{type: ConfigService, },\n];\n}\n\nfunction JwtHttp_tsickle_Closure_declarations() {\n/** @type {?} */\nJwtHttp.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nJwtHttp.ctorParameters;\n/** @type {?} */\nJwtHttp.prototype._http;\n/** @type {?} */\nJwtHttp.prototype._shared;\n/** @type {?} */\nJwtHttp.prototype._config;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/**\n * Created by Ron on 17/12/2015.\n */\n\nimport {Observable} from 'rxjs/Observable';\nimport {Subscriber} from 'rxjs/Subscriber';\nimport {Injectable} from '@angular/core';\nimport {Response} from '@angular/http';\nimport {ConfigService} from './config.service';\nimport {StorageService} from './storage.service';\n/**\n * Created by Ron on 17/12/2015.\n */\nexport class SharedService {\n    tokenName = this.config.tokenPrefix ? [this.config.tokenPrefix, this.config.tokenName].join(this.config.tokenSeparator) : this.config.tokenName;\n/**\n * @param {?} storage\n * @param {?} config\n */\nconstructor(private storage: StorageService,\nprivate config: ConfigService) {\n    }\n/**\n * @return {?}\n */\ngetToken() {\n        return this.storage.get(this.tokenName);\n    }\n/**\n * @param {?=} token\n * @return {?}\n */\ngetPayload(token = this.getToken()) {\n\n        if (token && token.split('.').length === 3) {\n            try {\n                let /** @type {?} */ base64Url = token.split('.')[1];\n                let /** @type {?} */ base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n                return JSON.parse(decodeURIComponent(encodeURIComponent(window.atob(base64))));\n            } catch ( /** @type {?} */e) {\n                return undefined;\n            }\n        }\n    }\n/**\n * @param {?} response\n * @return {?}\n */\nsetToken(response: string | Response | Object) {\n        if (!response) {\n            console.warn('Can\\'t set token without passing a value');\n            return;\n        }\n\n        let /** @type {?} */ token: string;\n        if (typeof response === 'string') {\n            token = response;\n        } else {\n            token = this.config.resolveToken(response)\n        }\n\n        if (token) {\n            const /** @type {?} */ expDate = this.getExpirationDate(token);\n            this.storage.set(this.tokenName, token, expDate ? expDate.toUTCString() : '');\n        }\n    }\n/**\n * @return {?}\n */\nremoveToken() {\n        this.storage.remove(this.tokenName);\n    }\n/**\n * @param {?=} token\n * @return {?}\n */\nisAuthenticated(token = this.getToken()) {\n\n        // a token is present\n        if (token) {\n            // token with a valid JWT format XXX.YYY.ZZZ\n            if (token.split('.').length === 3) {\n                // could be a valid JWT or an access token with the same format\n                try {\n                    let /** @type {?} */ base64Url = token.split('.')[1];\n                    let /** @type {?} */ base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n                    let /** @type {?} */ exp = JSON.parse(window.atob(base64)).exp;\n                    // jwt with an optional expiration claims\n                    if (exp) {\n                        let /** @type {?} */ isExpired = Math.round(new Date().getTime() / 1000) >= exp;\n                        if (isExpired) {\n                            // fail: Expired token\n                            this.storage.remove(this.tokenName);\n                            return false;\n                        } else {\n                            // pass: Non-expired token\n                            return true;\n                        }\n                    }\n                } catch ( /** @type {?} */e) {\n                    // pass: Non-JWT token that looks like JWT\n                    return true;\n                }\n            }\n            // pass: All other tokens\n            return true;\n        }\n        // lail: No token at all\n        return false;\n    }\n/**\n * @param {?=} token\n * @return {?}\n */\ngetExpirationDate(token = this.getToken()) {\n        let /** @type {?} */ payload = this.getPayload(token);\n        if (payload && payload.exp && Math.round(new Date().getTime() / 1000) < payload.exp) {\n            let /** @type {?} */ date = new Date(0);\n            date.setUTCSeconds(payload.exp);\n            return date;\n        }\n        return null;\n    }\n/**\n * @return {?}\n */\nlogout(): Observable<any> {\n        return Observable.create((observer: Subscriber<any>) => {\n            this.storage.remove(this.tokenName);\n            observer.next();\n            observer.complete();\n        });\n    }\n/**\n * @param {?} type\n * @return {?}\n */\nsetStorageType(type: 'localStorage' | 'sessionStorage' | 'cookie' | 'sessionCookie') {\n        this.config.storageType = type;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: StorageService, },\n{type: ConfigService, },\n];\n}\n\nfunction SharedService_tsickle_Closure_declarations() {\n/** @type {?} */\nSharedService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nSharedService.ctorParameters;\n/** @type {?} */\nSharedService.prototype.tokenName;\n/** @type {?} */\nSharedService.prototype.storage;\n/** @type {?} */\nSharedService.prototype.config;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {Injectable} from '@angular/core';\nimport {ConfigService} from './config.service';\n/**\n * @abstract\n */\nexport abstract class StorageService {\n/**\n * @abstract\n * @param {?} key\n * @return {?}\n */\nget(key: string) {}\n/**\n * @abstract\n * @param {?} key\n * @param {?} value\n * @param {?} date\n * @return {?}\n */\nset(key: string, value: string, date: string) {}\n/**\n * @abstract\n * @param {?} key\n * @return {?}\n */\nremove(key: string) {}\n}\n/**\n * Created by Ron on 17/12/2015.\n */\nexport class BrowserStorageService extends StorageService {\nprivate store = {};\nprivate isStorageAvailable: boolean;\n/**\n * @param {?} config\n */\nconstructor(private config: ConfigService) {\n        super();\n        this.isStorageAvailable = this.checkIsStorageAvailable(config);\n        if (!this.isStorageAvailable) {\n            console.warn(config.storageType + ' is not available.');\n        }\n    }\n/**\n * @param {?} key\n * @return {?}\n */\nget(key: string) {\n        return this.isStorageAvailable\n            ? this.config.storageType === 'cookie' || this.config.storageType === 'sessionCookie'\n                ? this.getCookie(key)\n                : window[this.config.storageType].getItem(key)\n            : this.store[key];\n    }\n/**\n * @param {?} key\n * @param {?} value\n * @param {?} date\n * @return {?}\n */\nset(key: string, value: string, date: string) {\n        this.isStorageAvailable\n            ? this.config.storageType === 'cookie' || this.config.storageType === 'sessionCookie'\n            ? this.setCookie(key, value, this.config.storageType === 'cookie' ? date : '')\n            : window[this.config.storageType].setItem(key, value)\n            : this.store[key] = value;\n    }\n/**\n * @param {?} key\n * @return {?}\n */\nremove(key: string) {\n        this.isStorageAvailable\n            ? this.config.storageType === 'cookie' || this.config.storageType === 'sessionCookie'\n            ? this.removeCookie(key)\n            : window[this.config.storageType].removeItem(key)\n            : delete this.store[key];\n    }\n/**\n * @param {?} config\n * @return {?}\n */\nprivate checkIsStorageAvailable(config: ConfigService) {\n        if (config.storageType === 'cookie' || config.storageType === 'sessionCookie') {\n            return this.isCookieStorageAvailable();\n        }\n        try {\n            const /** @type {?} */ supported = window && config.storageType in window && window[config.storageType] !== null;\n\n            if (supported) {\n                const /** @type {?} */ key = Math.random().toString(36).substring(7);\n                window[this.config.storageType].setItem(key, '');\n                window[this.config.storageType].removeItem(key);\n            }\n\n            return supported;\n        } catch ( /** @type {?} */e) {\n            return false;\n        }\n    }\n/**\n * @return {?}\n */\nprivate isCookieStorageAvailable() {\n        try {\n            const /** @type {?} */ supported = document && 'cookie' in document;\n\n            if (supported) {\n                const /** @type {?} */ key = Math.random().toString(36).substring(7);\n                this.setCookie(key, 'test', new Date(Date.now() + 60 * 1000).toUTCString());\n                const /** @type {?} */ value = this.getCookie(key);\n                this.removeCookie(key);\n                return value === 'test';\n            }\n            return false;\n        } catch ( /** @type {?} */e) {\n            return false;\n        }\n    }\n/**\n * @param {?} key\n * @param {?} value\n * @param {?=} expires\n * @param {?=} path\n * @return {?}\n */\nprivate setCookie(key: string, value: string, expires = '', path = '/') {\n        document.cookie = `${key}=${value}${expires ? `; expires=${expires}` : ''}; path=${path}`;\n    }\n/**\n * @param {?} key\n * @param {?=} path\n * @return {?}\n */\nprivate removeCookie(key: string, path = '/') {\n        this.setCookie(key, '', new Date(0).toUTCString(), path);\n    }\n/**\n * @param {?} key\n * @return {?}\n */\nprivate getCookie(key: string) {\n        return document.cookie.replace(new RegExp(`(?:(?:^|.*;\\\\s*)${key}\\\\s*\\\\=\\\\s*([^;]*).*$)|^.*$`), '$1');\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ConfigService, },\n];\n}\n\nfunction BrowserStorageService_tsickle_Closure_declarations() {\n/** @type {?} */\nBrowserStorageService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nBrowserStorageService.ctorParameters;\n/** @type {?} */\nBrowserStorageService.prototype.store;\n/** @type {?} */\nBrowserStorageService.prototype.isStorageAvailable;\n/** @type {?} */\nBrowserStorageService.prototype.config;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {Injectable} from '@angular/core';\nimport {Observable} from 'rxjs/Observable';\nimport {RequestMethod, Response} from '@angular/http';\n\n/**\n * Created by Ron on 17/12/2015.\n */\n\nexport interface IPopupOptions {\n    width?: number;\n    height?: number;\n    left?: number;\n    top?: number;\n    visibleToolbar?: boolean;\n}\n\nexport interface IOauth1Options {\n    url?: string;\n    name?: string;\n    popupOptions?: IPopupOptions;\n    redirectUri?: string;\n    authorizationEndpoint?: string;\n    oauthType?: string;\n    exchangeForToken?: boolean | ((options: {code?: string, state?: string}, userData?: any) => Observable<Response>);\n    method?: string | RequestMethod;\n}\n\nexport interface IOauth2Options extends IOauth1Options {\n    state?: string| (() => string);\n    responseType?: string;\n    responseParams?: {\n        code?: string;\n        clientId?: string;\n        redirectUri?: string;\n    };\n    clientId?: string;\n    scopeDelimiter?: string;\n    scopePrefix?: string;\n\n    requiredUrlParams?: string[];\n    optionalUrlParams?: string[];\n    scope?: string[]|string;\n    display?: string;\n}\n\nexport interface IProviders {\n    [provider: string]: IOauth2Options;\n}\n/**\n * @abstract\n */\nexport abstract class CustomConfig {\n    tokenRoot: string;\n    cordova: boolean;\n    baseUrl: string;\n    loginUrl: string;\n    signupUrl: string;\n    unlinkUrl: string;\n    tokenName: string;\n    tokenSeparator: string;\n    tokenPrefix: string;\n    authToken: string;\n    authHeader: string;\n    storageType: 'localStorage' | 'sessionStorage' | 'cookie' | 'sessionCookie';\n    providers: IProviders;\n    defaultHeaders: { [name: string]: string };\n    withCredentials: boolean;\n    autoRefreshToken: boolean;\n    refreshUrl: string;\n    refreshBeforeExpiration: number;\n    tryTokenRefreshIfUnauthorized: boolean;\n    resolveToken: (response: Response) => string;\n}\n\nfunction CustomConfig_tsickle_Closure_declarations() {\n/** @type {?} */\nCustomConfig.prototype.tokenRoot;\n/** @type {?} */\nCustomConfig.prototype.cordova;\n/** @type {?} */\nCustomConfig.prototype.baseUrl;\n/** @type {?} */\nCustomConfig.prototype.loginUrl;\n/** @type {?} */\nCustomConfig.prototype.signupUrl;\n/** @type {?} */\nCustomConfig.prototype.unlinkUrl;\n/** @type {?} */\nCustomConfig.prototype.tokenName;\n/** @type {?} */\nCustomConfig.prototype.tokenSeparator;\n/** @type {?} */\nCustomConfig.prototype.tokenPrefix;\n/** @type {?} */\nCustomConfig.prototype.authToken;\n/** @type {?} */\nCustomConfig.prototype.authHeader;\n/** @type {?} */\nCustomConfig.prototype.storageType;\n/** @type {?} */\nCustomConfig.prototype.providers;\n/** @type {?} */\nCustomConfig.prototype.defaultHeaders;\n/** @type {?} */\nCustomConfig.prototype.withCredentials;\n/** @type {?} */\nCustomConfig.prototype.autoRefreshToken;\n/** @type {?} */\nCustomConfig.prototype.refreshUrl;\n/** @type {?} */\nCustomConfig.prototype.refreshBeforeExpiration;\n/** @type {?} */\nCustomConfig.prototype.tryTokenRefreshIfUnauthorized;\n/** @type {?} */\nCustomConfig.prototype.resolveToken;\n}\n\nexport class ConfigService {\n/**\n * @param {?=} config\n */\nconstructor(config?: CustomConfig) {\n        Object.keys(config).forEach((key) => {\n            if (typeof config[key] === \"undefined\") {\n                return;\n            }\n            if (key !== 'providers') {\n                this[key] = config[key];\n            } else {\n                Object.keys(config[key]).map(provider => {\n                    this.providers[provider] = Object.assign(\n                        this.providers[provider] || {},\n                        config.providers[provider]\n                    );\n                });\n            }\n        });\n    }\n    withCredentials = false;\n    tokenRoot = null;\n    baseUrl = '/';\n    loginUrl = '/auth/login';\n    signupUrl = '/auth/signup';\n    unlinkUrl = '/auth/unlink/';\n    refreshUrl = '/auth/refresh';\n    tokenName = 'token';\n    tokenSeparator = '_';\n    tokenPrefix = 'ng2-ui-auth';\n    authHeader = 'Authorization';\n    authToken = 'Bearer';\n    storageType: 'localStorage' | 'sessionStorage' | 'cookie' | 'sessionCookie' = 'localStorage';\n    defaultHeaders = null;\n    autoRefreshToken = false;\n    refreshBeforeExpiration = 600000; //10 minutes\n    tryTokenRefreshIfUnauthorized = false;\n    cordova = this.isCordovaApp();\n    resolveToken = (response: Response|Object) => {\n        let /** @type {?} */ tokenObj = response;\n        if (response instanceof Response) {\n            tokenObj = response.json();\n        }\n        const /** @type {?} */ accessToken: string | Object | null | undefined = tokenObj &&\n            (tokenObj['access_token'] || tokenObj['token'] || tokenObj['data']);\n        if (!accessToken) {\n            console.warn('No token found');\n            return null;\n        }\n        if (typeof accessToken === 'string') {\n            return accessToken;\n        }\n        if (typeof accessToken !== 'object') {\n            console.warn('No token found');\n            return null;\n        }\n        const /** @type {?} */ tokenRootData = this.tokenRoot &&\n            this.tokenRoot.split('.').reduce(\n                (o, x) => {\n                    return o[x];\n                },\n                accessToken);\n        const /** @type {?} */ token = tokenRootData ? tokenRootData[this.tokenName] : accessToken[this.tokenName];\n        if (token) {\n            return token;\n        }\n        let /** @type {?} */ tokenPath = this.tokenRoot ? this.tokenRoot + '.' + this.tokenName : this.tokenName;\n        console.warn('Expecting a token named \"' + tokenPath);\n        return null;\n    };\n    providers: IProviders = {\n        facebook: {\n            name: 'facebook',\n            url: '/auth/facebook',\n            authorizationEndpoint: 'https://www.facebook.com/v2.5/dialog/oauth',\n            redirectUri: this.getHttpHost('/'),\n            requiredUrlParams: ['display', 'scope'],\n            scope: ['email'],\n            scopeDelimiter: ',',\n            display: 'popup',\n            oauthType: '2.0',\n            popupOptions: {width: 580, height: 400}\n        },\n        google: {\n            name: 'google',\n            url: '/auth/google',\n            authorizationEndpoint: 'https://accounts.google.com/o/oauth2/auth',\n            redirectUri: this.getHttpHost(),\n            requiredUrlParams: ['scope'],\n            optionalUrlParams: ['display', 'state', 'prompt', 'login_hint', 'access_type', 'include_granted_scopes', 'openid.realm', 'hd'],\n            scope: ['profile', 'email'],\n            scopePrefix: 'openid',\n            scopeDelimiter: ' ',\n            display: 'popup',\n            oauthType: '2.0',\n            popupOptions: {width: 452, height: 633},\n            state: () => encodeURIComponent(Math.random().toString(36).substr(2)),\n        },\n        github: {\n            name: 'github',\n            url: '/auth/github',\n            authorizationEndpoint: 'https://github.com/login/oauth/authorize',\n            redirectUri: this.getHttpHost(),\n            optionalUrlParams: ['scope'],\n            scope: ['user:email'],\n            scopeDelimiter: ' ',\n            oauthType: '2.0',\n            popupOptions: {width: 1020, height: 618}\n        },\n        instagram: {\n            name: 'instagram',\n            url: '/auth/instagram',\n            authorizationEndpoint: 'https://api.instagram.com/oauth/authorize',\n            redirectUri: this.getHttpHost(),\n            requiredUrlParams: ['scope'],\n            scope: ['basic'],\n            scopeDelimiter: '+',\n            oauthType: '2.0'\n        },\n        linkedin: {\n            name: 'linkedin',\n            url: '/auth/linkedin',\n            authorizationEndpoint: 'https://www.linkedin.com/uas/oauth2/authorization',\n            redirectUri: this.getHttpHost(),\n            requiredUrlParams: ['state'],\n            scope: ['r_emailaddress'],\n            scopeDelimiter: ' ',\n            state: 'STATE',\n            oauthType: '2.0',\n            popupOptions: {width: 527, height: 582}\n        },\n        twitter: {\n            name: 'twitter',\n            url: '/auth/twitter',\n            authorizationEndpoint: 'https://api.twitter.com/oauth/authenticate',\n            redirectUri: this.getHttpHost(),\n            oauthType: '1.0',\n            popupOptions: {width: 495, height: 645}\n        },\n        twitch: {\n            name: 'twitch',\n            url: '/auth/twitch',\n            authorizationEndpoint: 'https://api.twitch.tv/kraken/oauth2/authorize',\n            redirectUri: this.getHttpHost(),\n            requiredUrlParams: ['scope'],\n            scope: ['user_read'],\n            scopeDelimiter: ' ',\n            display: 'popup',\n            oauthType: '2.0',\n            popupOptions: {width: 500, height: 560}\n        },\n        live: {\n            name: 'live',\n            url: '/auth/live',\n            authorizationEndpoint: 'https://login.live.com/oauth20_authorize.srf',\n            redirectUri: this.getHttpHost(),\n            requiredUrlParams: ['display', 'scope'],\n            scope: ['wl.emails'],\n            scopeDelimiter: ' ',\n            display: 'popup',\n            oauthType: '2.0',\n            popupOptions: {width: 500, height: 560}\n        },\n        yahoo: {\n            name: 'yahoo',\n            url: '/auth/yahoo',\n            authorizationEndpoint: 'https://api.login.yahoo.com/oauth2/request_auth',\n            redirectUri: this.getHttpHost(),\n            scope: [],\n            scopeDelimiter: ',',\n            oauthType: '2.0',\n            popupOptions: {width: 559, height: 519}\n        },\n        bitbucket: {\n            name: 'bitbucket',\n            url: '/auth/bitbucket',\n            authorizationEndpoint: 'https://bitbucket.org/site/oauth2/authorize',\n            redirectUri: this.getHttpHost('/'),\n            requiredUrlParams: ['scope'],\n            scope: ['email'],\n            scopeDelimiter: ',',\n            oauthType: '2.0',\n            popupOptions: {width: 1028, height: 529}\n        },\n        spotify: {\n            name: 'spotify',\n            url: '/auth/spotify',\n            authorizationEndpoint: 'https://accounts.spotify.com/authorize',\n            redirectUri: this.getHttpHost(),\n            optionalUrlParams: ['state'],\n            requiredUrlParams: ['scope'],\n            scope: ['user-read-email'],\n            scopePrefix: '',\n            scopeDelimiter: ',',\n            oauthType: '2.0',\n            popupOptions: { width: 500, height: 530 },\n            state: () => encodeURIComponent(Math.random().toString(36).substr(2))\n        }\n    };\n/**\n * @param {?=} path\n * @return {?}\n */\ngetHttpHost(path = '') {\n        return window.location.origin + path;\n    }\n/**\n * @return {?}\n */\nisCordovaApp() {\n        return !!window['cordova'];\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: CustomConfig, },\n];\n}\n\nfunction ConfigService_tsickle_Closure_declarations() {\n/** @type {?} */\nConfigService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nConfigService.ctorParameters;\n/** @type {?} */\nConfigService.prototype.withCredentials;\n/** @type {?} */\nConfigService.prototype.tokenRoot;\n/** @type {?} */\nConfigService.prototype.baseUrl;\n/** @type {?} */\nConfigService.prototype.loginUrl;\n/** @type {?} */\nConfigService.prototype.signupUrl;\n/** @type {?} */\nConfigService.prototype.unlinkUrl;\n/** @type {?} */\nConfigService.prototype.refreshUrl;\n/** @type {?} */\nConfigService.prototype.tokenName;\n/** @type {?} */\nConfigService.prototype.tokenSeparator;\n/** @type {?} */\nConfigService.prototype.tokenPrefix;\n/** @type {?} */\nConfigService.prototype.authHeader;\n/** @type {?} */\nConfigService.prototype.authToken;\n/** @type {?} */\nConfigService.prototype.storageType;\n/** @type {?} */\nConfigService.prototype.defaultHeaders;\n/** @type {?} */\nConfigService.prototype.autoRefreshToken;\n/** @type {?} */\nConfigService.prototype.refreshBeforeExpiration;\n/** @type {?} */\nConfigService.prototype.tryTokenRefreshIfUnauthorized;\n/** @type {?} */\nConfigService.prototype.cordova;\n/** @type {?} */\nConfigService.prototype.resolveToken;\n/** @type {?} */\nConfigService.prototype.providers;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"],"names":["http","Observable","merge"],"mappings":"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"}
